@mixin btn-border-drawing(
  $color: #ccc,
  $hover: black,
  $width: 2px,
  $vertical: top,
  $horizontal: left,
  $duration: 0.25s
) {
  box-shadow: inset 0 0 0 $width $color;
  color: $color;
  transition: color $duration $duration/3;
  position: relative;

  &::before,
  &::after {
    border: 0 solid transparent;
    box-sizing: border-box;
    content: "";
    pointer-events: none;
    position: absolute;
    width: 0;
    height: 0;

    #{$vertical}: 0;
    #{$horizontal}: 0;
  }

  &::before {
    $h-side: if($horizontal == "left", "right", "left");

    border-#{$vertical}-width: $width;
    border-#{$h-side}-width: $width;
  }

  &::after {
    $v-side: if($vertical == "top", "bottom", "top");

    border-#{$v-side}-width: $width;
    border-#{$horizontal}-width: $width;
  }

  &:hover {
    color: $hover;

    &::before,
    &::after {
      border-color: $hover;
      transition: border-color 0s, width $duration, height $duration;
      width: 100%;
      height: 100%;
    }

    &::before {
      transition-delay: 0s, 0s, $duration;
    }

    &::after {
      transition-delay: 0s, $duration, 0s;
    }
  }
}

.draw-border {
  @include btn-border-drawing(#2a2552, #eabe64, 2px, bottom, right);
}

.btn {
  background: none;
  border: none;
  cursor: pointer;
  line-height: 1.5;
  padding: 1em 2em;
  letter-spacing: 0.05rem;
  font-weight: 700;

  &:focus {
    outline: 2px dotted #2a2552;
  }
}

////////////////////////

//
//  MEDIA QUERIES
//––––––––––––––––––––––––––––––––––––––––––––––––––
// A map of breakpoints.
$breakpoints: (
  xs: 350px,
  mxs: 380px,
  sm: 450px,
  smb: 576px,
  md: 768px,
  smd: 1000px,
  lg: 1199px,
  aslg: 1200px,
  aelg: 1800px,
  xl: 1900px,
  xxl: 2400px
);
//
//  RESPOND ABOVE
//––––––––––––––––––––––––––––––––––––––––––––––––––
// @include respond-above(sm) {}
@mixin respond-above($breakpoint) {
  // If the breakpoint exists in the map.
  @if map-has-key($breakpoints, $breakpoint) {
    // Get the breakpoint value.
    $breakpoint-value: map-get(
      $breakpoints,
      $breakpoint
    ); // Write the media query.
    @media (min-width: $breakpoint-value) {
      @content;
    } // If the breakpoint doesn't exist in the map.
  } @else {
    // Log a warning.
    @warn 'Invalid breakpoint: #{$breakpoint}.';
  }
}

//
//  RESPOND BELOW
//––––––––––––––––––––––––––––––––––––––––––––––––––
// @include respond-below(sm) {}
@mixin respond-below($breakpoint) {
  // If the breakpoint exists in the map.
  @if map-has-key($breakpoints, $breakpoint) {
    // Get the breakpoint value.
    $breakpoint-value: map-get(
      $breakpoints,
      $breakpoint
    ); // Write the media query.
    @media (max-width: ($breakpoint-value - 1)) {
      @content;
    } // If the breakpoint doesn't exist in the map.
  } @else {
    // Log a warning.
    @warn 'Invalid breakpoint: #{$breakpoint}.';
  }
}

//
//  RESPOND BETWEEN
//––––––––––––––––––––––––––––––––––––––––––––––––––
// @include respond-between(sm, md) {}
@mixin respond-between($lower, $upper) {
  // If both the lower and upper breakpoints exist in the map.
  @if map-has-key($breakpoints, $lower) and map-has-key($breakpoints, $upper) {
    // Get the lower and upper breakpoints.
    $lower-breakpoint: map-get($breakpoints, $lower);
    $upper-breakpoint: map-get($breakpoints, $upper); // Write the media query.
    @media (min-width: $lower-breakpoint) and (max-width: ($upper-breakpoint - 1)) {
      @content;
    } // If one or both of the breakpoints don't exist.
  } @else {
    // If lower breakpoint is invalid.
    @if (map-has-key($breakpoints, $lower) ==false) {
      // Log a warning.
      @warn 'Your lower breakpoint was invalid: #{$lower}.';
    } // If upper breakpoint is invalid.
    @if (map-has-key($breakpoints, $upper) ==false) {
      // Log a warning.
      @warn 'Your upper breakpoint was invalid: #{$upper}.';
    }
  }
}

@include respond-between(xl, xxl) {
  .hide-for-large-screen {
    display: none !important;
  }
}

@include respond-between(lg, xl) {
  .hide-for-large-screen {
    display: none !important;
  }
}

// @include respond-between(sm, smb) {
//   .hide-for-large-screen {
//     display: none !important;
//   }
// }

// @include respond-between(smb, md) {
//   .hide-for-mobile-screen {
//     display: none !important;
//   }
// }

@include respond-between(aslg, aelg) {
  .hide-for-large-screen {
    display: none !important;
  }
  .main-container {
    width: 100% !important;
    padding: 50px 30px !important;
  }
}

@include respond-between(md, lg) {
  .hide-for-tab-screen {
    display: none !important;
  }
  .show-for-tab-screen {
    display: block !important;
  }
  .col-tab-15 {
    max-width: 15% !important;
    flex: 0 0 15% !important;
  }
  .col-tab-35 {
    max-width: 35% !important;
    flex: 0 0 35% !important;
  }
  .col-tab-50 {
    max-width: 50% !important;
    flex: 0 0 50% !important;
  }
  .col-tab-65 {
    max-width: 65% !important;
    flex: 0 0 65% !important;
  }
  .col-tab-60 {
    max-width: 60% !important;
    flex: 0 0 60% !important;
  }
  .col-tab-85 {
    max-width: 85% !important;
    flex: 0 0 85% !important;
  }
  .portfolio-nav-header {
    padding: 10px 15px !important;
  }
  .main-container {
    width: 100% !important;
    padding: 150px 30px !important;
  }
  .col-tab-100 {
    max-width: 100% !important;
    flex: 0 0 100% !important;
  }
  .photo {
    position: relative !important;
    top: 0% !important;
    left: 33% !important;
    transform: none !important;
    display: block !important;
  }
  .tab-tb-50 {
    width: 50% !important;
  }
  .tab-text-center {
    text-align: center !important;
  }
  .tab-text-right {
    text-align: right !important;
  }
}

@include respond-between(xs, md) {
  html {
    width: 100%;
  }
  .hide-for-mobile-screen {
    display: none !important;
  }
  .main-container {
    width: 100% !important;
    padding: 50px 30px !important;
  }
  .photo img {
    width: 300px !important;
    height: 380px !important;
    margin-top: -10px !important;
  }
  .photo {
    position: relative !important;
    top: 0% !important;
    left: 0% !important;
    transform: none !important;
    display: block !important;
  }
  .skill-td-45 {
    max-width: 40% !important;
    flex: 0 0 40% !important;
  }
  .skill-td-60 {
    max-width: 60% !important;
    flex: 0 0 60% !important;
  }
  .col-mob-12 {
    max-width: 100% !important;
    flex: 0 0 100% !important;
  }
  #mobile-top-navigation {
    display: none;
    background-color: #ffffff;
    position: absolute;
    width: 100%;
    left: 0px;
    top: 60px;
    z-index: 1111 !important;
    padding: 0px 0px 50px 0px;
  }
  .mob-nav-button {
    padding: 15px 20px !important;
  }
  .mob-table tr td {
    padding: 7px !important;
  }
}

@include respond-between(mxs, sm) {
  .photo {
    position: relative !important;
    top: 0% !important;
    left: 3.5% !important;
    transform: none !important;
    display: block !important;
  }
}

@include respond-between(xs, mxs) {
  .photo {
    position: relative !important;
    top: 0% !important;
    left: 0% !important;
    transform: none !important;
    display: block !important;
  }
}

@include respond-between(smd, lg) {
  .photo {
    position: relative !important;
    top: 0% !important;
    left: 62% !important;
    transform: none !important;
    display: block !important;
  }
}
